import java.util.regex.Matcher

plugins {
    id 'idea'
    id 'org.asciidoctor.convert' version '1.5.6' apply false
}

subprojects {
    version = '0.0.0.0'
}

subprojects {
    ext {
        /*
            Java plugin settings
         */
        globalSourceCompatibility = '1.10'
        globalTargetCompatibility = '1.10'
    }

    afterEvaluate {
        repositories {
            jcenter()
            mavenCentral()
            mavenLocal()
        }

        /*
            Common configuration for application plugin
         */
        if (plugins.hasPlugin('application')) {
            ext {
                /*
                    Application plugin settings
                 */
                distributionConfigLocation = 'config'
            }


            //setup logger config location
            run {
                doFirst {
                    jvmArgs = [
                            "-Dlog4j.configurationFile=${rootDir}/config/commonLog4j2.xml,${projectDir}/config/log4j2.xml"
                    ]
                }
            }
            startScripts {
                doFirst {
                    defaultJvmOpts = [
                            "-Dlog4j.configurationFile=APPROOT${distributionConfigLocation}/commonLog4j2.xml,APPROOT${distributionConfigLocation}/log4j2.xml"
                    ]
                }
                doLast {
                    def bashFile = new File(outputDir, applicationName)
                    String bashContent = bashFile.text
                    bashFile.text = bashContent.replaceAll('APPROOT', Matcher.quoteReplacement('$APP_HOME/'))

                    def batFile = new File(outputDir, applicationName + ".bat")
                    String batContent = batFile.text
                    batFile.text = batContent.replaceAll('APPROOT', Matcher.quoteReplacement('%APP_HOME%\\'))
                }
            }
            distributions {
                main {
                    contents {
                        from("${rootDir}/config") {
                            into "${distributionConfigLocation}"
                        }
                        from("${projectDir}/config") {
                            into "${distributionConfigLocation}"
                        }
                    }
                }
            }
        }
        jar {
            inputs.property("moduleName", moduleName)
            manifest {
                attributes('Automatic-Module-Name': moduleName)
            }
        }
    }
}