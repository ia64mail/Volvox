include "commonApplication"

### https://doc.akka.io/docs/akka/2.5/general/configuration.html#listing-of-the-reference-configuration
akka {
  actor {
    ### https://doc.akka.io/docs/akka/2.5/general/configuration.html#actor-deployment-configuration
    deployment {
      /stub/router {
        # routing (load-balance) scheme to use
        # - available: "from-code", "round-robin", "random", "smallest-mailbox",
        #              "scatter-gather", "broadcast"
        # - or:        Fully qualified class name of the router class.
        #              The class must extend akka.routing.CustomRouterConfig and
        #              have a public constructor with com.typesafe.config.Config
        #              and optional akka.actor.DynamicAccess parameter.
        # - default is "from-code";
        # Whether or not an actor is transformed to a Router is decided in code
        # only (Props.withRouter). The type of router can be overridden in the
        # configuration; specifying "from-code" means that the values specified
        # in the code shall be used.
        # In case of routing, the actors to be routed to can be specified
        # in several ways:
        # - nr-of-instances: will create that many children
        # - routees.paths: will route messages to these paths using ActorSelection,
        #   i.e. will not create children
        # - resizer: dynamically resizable number of routees as specified in
        #   resizer below
        router = round-robin-group

        # Alternatively to giving nr-of-instances you can specify the full
        # paths of those actors which should be routed to. This setting takes
        # precedence over nr-of-instances
        routees.paths = ["/user/stub"]

        cluster {
          # enable cluster aware router that deploys to nodes in the cluster
          enabled = on

          # Defines if routees are allowed to be located on the same node as
          # the head router actor, or only on remote nodes.
          # Useful for master-worker scenario where all routees are remote.
          allow-local-routees = on

          # Use members with all specified roles, or all members if undefined or empty.
          use-role = stub-actor
        }
      }
    }
  }

  ### See https://doc.akka.io/docs/akka/2.5/general/configuration.html#akka-cluster
  cluster {
    # The roles of this member. List of strings, e.g. roles = ["A", "B"].
    # The roles are part of the membership information and can be used by
    # routers or other services to distribute work to certain member types,
    # e.g. front-end and back-end nodes.
    # Roles are not allowed to start with "dc-" as that is reserved for the
    # special role assigned from the data-center a node belongs to (see the
    # multi-data-center section below)
    roles = [stub-actor]
  }
}